{"ast":null,"code":"var _jsxFileName = \"/Users/zemon/Desktop/Demo/world_clock/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconsole.log(new Date().getTime());\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timeData: {\n        London: {\n          date: '2019-07-08',\n          time: '13:00:00',\n          timezone: 0\n        },\n        China: {\n          date: '2019-07-08',\n          time: '21:00:00',\n          timezone: 8\n        },\n        France: {\n          date: '2019-07-08',\n          time: '21:00:00',\n          timezone: 1\n        },\n        Iraq: {\n          date: '2019-07-08',\n          time: '21:00:00',\n          timezone: 3\n        }\n      },\n      clocks: [\"London\", \"London\", \"London\", \"China\", \"China\", \"China\"],\n      clocksOpts: [\"London\", \"China\", \"Iraq\", \"France\"]\n    };\n  }\n\n  async getTime() {\n    return new Promise(resolve => setTimeout(() => {\n      let reqError = Math.random() <= 0.3;\n\n      if (reqError) {\n        resolve({\n          code: 400,\n          error: '请求出错'\n        });\n      } else {\n        resolve({\n          code: 800,\n          value: new Date()\n        });\n      }\n    }, 800));\n  }\n\n  componentDidMount() {\n    setInterval(async () => {\n      let res = await this.getTime();\n      console.log(res);\n    }, 60000);\n  }\n\n  renderRowLeftEle(count) {\n    let dom = [];\n\n    for (let i = 0; i < count; i++) {\n      if (i === 0) {\n        dom.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"clock add\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"city\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }\n        }, \"--\")));\n      } else {\n        dom.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"clock\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"city\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    return dom;\n  }\n\n  render() {\n    const {\n      clocks,\n      timeData\n    } = this.state;\n    const remainder = 3 - clocks.length % 3;\n    console.log(remainder);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, this.renderClocks(), remainder > 0 ? this.renderRowLeftEle(remainder) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zemon/Desktop/Demo/world_clock/src/App.js"],"names":["React","console","log","Date","getTime","App","Component","state","timeData","London","date","time","timezone","China","France","Iraq","clocks","clocksOpts","Promise","resolve","setTimeout","reqError","Math","random","code","error","value","componentDidMount","setInterval","res","renderRowLeftEle","count","dom","i","push","render","remainder","length","renderClocks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconsole.log(new Date().getTime())\n\nclass App extends React.Component {\n    state = {\n        timeData: {\n            London: {\n                date: '2019-07-08',\n                time: '13:00:00',\n                timezone: 0\n            },\n            China: {\n                date: '2019-07-08',\n                time: '21:00:00',\n                timezone: 8\n            },\n            France: {\n                date: '2019-07-08',\n                time: '21:00:00',\n                timezone: 1\n            },\n            Iraq: {\n                date: '2019-07-08',\n                time: '21:00:00',\n                timezone: 3\n            }\n        },\n        clocks: [\n            \"London\",\n            \"London\",\n            \"London\",\n            \"China\",\n            \"China\",\n            \"China\",\n        ],\n        clocksOpts: [\n            \"London\",\n            \"China\",\n            \"Iraq\",\n            \"France\"\n        ]\n\n    }\n\n    async getTime() {\n        return new Promise(resolve => setTimeout(() => {\n            let reqError = Math.random() <= 0.3\n            if (reqError) {\n                resolve({\n                    code: 400,\n                    error: '请求出错'\n                })\n            } else {\n                resolve({\n                    code: 800,\n                    value: new Date()\n                })\n            }\n        }, 800))\n    }\n\n    componentDidMount() {\n        setInterval(async () => {\n            let res = await this.getTime()\n            console.log(res)\n        }, 60000)\n    }\n\n    renderRowLeftEle(count) {\n        let dom = []\n        for (let i = 0; i < count; i++) {\n            if (i === 0) {\n                dom.push(\n                    <div className=\"clock add\">\n                        <div className=\"city\">+</div>\n                        <div className=\"time\">--</div>\n                    </div>\n                )\n            } else {\n                dom.push(\n                    <div className=\"clock\">\n                        <div className=\"city\"></div>\n                        <div className=\"time\"></div>\n                    </div>\n                )\n            }\n\n        }\n        return dom\n    }\n\n    render() {\n        const {clocks, timeData} = this.state\n        const remainder = 3 - clocks.length % 3\n        console.log(remainder)\n        return (\n            <div className=\"App\">\n                <div className=\"table\">\n                    {/*{*/}\n                    {/*    clocks.map((city, index) => (*/}\n                    {/*        <div className=\"clock\" key={index}>*/}\n                    {/*            <div className=\"city\">{city}</div>*/}\n                    {/*            <div className=\"time\">*/}\n                    {/*                <code>{timeData[city].date}</code>*/}\n                    {/*                <br/>*/}\n                    {/*                <code>{timeData[city].time}</code>*/}\n                    {/*            </div>*/}\n                    {/*        </div>*/}\n                    {/*    ))*/}\n                    {/*}*/}\n                    {\n                        this.renderClocks()\n                    }\n                    {\n                        remainder > 0 ? this.renderRowLeftEle(remainder) : null\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}